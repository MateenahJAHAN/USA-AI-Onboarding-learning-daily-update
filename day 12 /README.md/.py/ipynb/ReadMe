### Day 12 Progress

Today I focused on strengthening my Python fundamentals, practicing with external APIs, and documenting everything in Google Colab and Postman.



###  Python Practice (Dictionaries, Functions, OOP)

**Sources:** Scaler module exercises + LLM-generated problems
**Environment:** Google Colab notebooks

## Topics Covered:

1. **Dictionaries & Functions**
2. **Object-Oriented Programming**

### Notebooks:

* function_and_dict_practice_day12.ipynb`

###  External API Practice

### 1. OpenAI Chat Completion API

**Setup in VS Code (`openai-demo` folder):**

```ini
.env file with:
OPENAI_API_KEY=sk-…your_key_here…
```

```python
from openai import OpenAI
import os

client = OpenAI(api_key=os.getenv("OPENAI_API_KEY"))
response = client.chat.completions.create(
    model="gpt-3.5-turbo",
    messages=[
        {"role": "system", "content": "You are a helpful assistant."},
        {"role": "user",   "content": "Hello, how are you?"}
    ]
)
print(response.choices[0].message.content)
```

**Error faced:**

```text
openai.RateLimitError: Error code: 429 - {'error': {'message': 'You exceeded your current quota'...}}
```

**Solution:** Checked OpenAI usage dashboard, wrapped calls in `try/except`, used minimal `max_tokens` for testing.

### 2. JSONPlaceholder API

**Python script (`json-demo/get_posts.py`):**

```python
from dotenv import load_dotenv
import os, requests

load_dotenv()
BASE_URL = os.getenv("BASE_URL")  # https://jsonplaceholder.typicode.com
response = requests.get(f"{BASE_URL}/posts")
posts = response.json()
print(f"Got {len(posts)} posts. First post ID: {posts[0]['id']}")
```

**Postman:**

* Used existing `JSON-Env` with `BASE_URL`
* Created new collection **JSON Demo**
* Verified status codes:

  * **GET** → 200
  * **POST** → 201
  * **PUT** → 200
  * **DELETE** → 200

### 3. Weather API & GitHub API (Previous Work)

Scripts and Postman collections for the Weather API and GitHub API CRUD are available under **Weather API** and **GitHub API CRUD**.



###  GitHub

Pushed all notebooks, scripts, and this README to GitHub under branch `day12-update`:

* `function_and_dict_practice_day12.ipynb`
* `oop_practice_day12.ipynb`
* `chat_completion.py`, `.env.example`
* `get_posts.py`, `json_client.py`, `.env.example`

---

###  Challenges & Solutions

1. **Rate limit on OpenAI**

   * Problem: 429 error (insufficient\_quota)
   * Solution: Checked billing, used small `max_tokens`, added error handling

2. **Environment variable loading**

   * Problem: `BASE_URL` was `None`
   * Solution: Explicitly specified `dotenv_path` in `load_dotenv()`, printed debug value

3. **Hidden newline in Postman URL**

   * Problem: 404 due to `%0A` at end of URL
   * Solution: Removed trailing whitespace in `{{BASE_URL}}/posts`, verified in Postman Console

4. **Folder naming issues**

   * Problem: Extra spaces in folder names caused `cd` errors
   * Solution: Renamed folders (`openai-demo`, `json-demo`), reopened correct root in VS Code




